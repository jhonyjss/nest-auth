services:
  main:
    container_name: nest
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: production
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${PORT_SERVER}:${PORT_SERVER}

    environment:
      - NODE_ENV=production

    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - redis
      - mysql

  nginx:
    image: nginx:alpine
    container_name: nginx
    environment:
      - NGINX_HOST=moseon.com.br
      - NGINX_PORT=80
    networks:
      - webnet
    volumes:
      - ./nginx/nest.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'" 
    ports:
      - 80:80
      - 443:443
    depends_on:
      - main

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis:
    container_name: redis
    image: redis:5
    networks:
      - webnet
    restart: always
  mysql:
    container_name: mysql
    image: mysql:5.7
    networks:
      - webnet
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - ./data:/var/lib/mysql
volumes:
  letsencrypt:

networks:
  webnet:
    driver: bridge
